// <auto-generated />
using System;
using Adapters.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Adapters.Migrations
{
    [DbContext(typeof(CarRentalDbContext))]
    partial class CarRentalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Adapters.Models.Carro", b =>
                {
                    b.Property<int>("CarroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Carro_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarroId"));

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.HasKey("CarroId")
                        .HasName("PK__Carro__6467B009831ED7AB");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Carro", (string)null);
                });

            modelBuilder.Entity("Adapters.Models.Categorium", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CategoriaId")
                        .HasName("PK__Categori__F353C1E5ACF1952A");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Adapters.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Endereco")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("ClienteId")
                        .HasName("PK__Cliente__71ABD087D410F494");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("Adapters.Models.Funcionario", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FuncionarioId"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("FuncionarioId")
                        .HasName("PK__Funciona__297ECCAAF8D468AE");

                    b.ToTable("Funcionario", (string)null);
                });

            modelBuilder.Entity("Adapters.Models.Locacao", b =>
                {
                    b.Property<int>("Locacaoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Locacaoid"));

                    b.Property<int>("CarroId")
                        .HasColumnType("int")
                        .HasColumnName("Carro_id");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDevolucao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataRetirada")
                        .HasColumnType("datetime");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Locacaoid")
                        .HasName("PK__Locacao__31DA8772AB53BD5A");

                    b.HasIndex("CarroId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ReservaId");

                    b.ToTable("Locacao", (string)null);
                });

            modelBuilder.Entity("Adapters.Models.Pagamento", b =>
                {
                    b.Property<int>("PagamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagamentoId"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<int>("LocacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Metodo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("PagamentoId")
                        .HasName("PK__Pagament__977DE7F3FD4262ED");

                    b.HasIndex("LocacaoId");

                    b.ToTable("Pagamento", (string)null);
                });

            modelBuilder.Entity("Adapters.Models.Reserva", b =>
                {
                    b.Property<int>("ReservaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservaId"));

                    b.Property<int>("CarroId")
                        .HasColumnType("int")
                        .HasColumnName("Carro_id");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_fim");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_inicio");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("ReservaId")
                        .HasName("PK__Reserva__C399376365B93271");

                    b.HasIndex("CarroId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Reserva", (string)null);
                });

            modelBuilder.Entity("Adapters.Models.Carro", b =>
                {
                    b.HasOne("Adapters.Models.Categorium", "Categoria")
                        .WithMany("Carros")
                        .HasForeignKey("CategoriaId")
                        .IsRequired()
                        .HasConstraintName("FK__Carro__Categoria__4F7CD00D");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Adapters.Models.Locacao", b =>
                {
                    b.HasOne("Adapters.Models.Carro", "Carro")
                        .WithMany("Locacaos")
                        .HasForeignKey("CarroId")
                        .IsRequired()
                        .HasConstraintName("FK__Locacao__Carro_i__5812160E");

                    b.HasOne("Adapters.Models.Cliente", "Cliente")
                        .WithMany("Locacaos")
                        .HasForeignKey("ClienteId")
                        .IsRequired()
                        .HasConstraintName("FK__Locacao__Cliente__571DF1D5");

                    b.HasOne("Adapters.Models.Funcionario", "Funcionario")
                        .WithMany("Locacaos")
                        .HasForeignKey("FuncionarioId")
                        .IsRequired()
                        .HasConstraintName("FK__Locacao__Funcion__59063A47");

                    b.HasOne("Adapters.Models.Reserva", "Reserva")
                        .WithMany("Locacaos")
                        .HasForeignKey("ReservaId")
                        .IsRequired()
                        .HasConstraintName("FK__Locacao__Reserva__5629CD9C");

                    b.Navigation("Carro");

                    b.Navigation("Cliente");

                    b.Navigation("Funcionario");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Adapters.Models.Pagamento", b =>
                {
                    b.HasOne("Adapters.Models.Locacao", "Locacao")
                        .WithMany("Pagamentos")
                        .HasForeignKey("LocacaoId")
                        .IsRequired()
                        .HasConstraintName("FK__Pagamento__Locac__5BE2A6F2");

                    b.Navigation("Locacao");
                });

            modelBuilder.Entity("Adapters.Models.Reserva", b =>
                {
                    b.HasOne("Adapters.Models.Carro", "Carro")
                        .WithMany("Reservas")
                        .HasForeignKey("CarroId")
                        .IsRequired()
                        .HasConstraintName("FK__Reserva__Carro_i__534D60F1");

                    b.HasOne("Adapters.Models.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .IsRequired()
                        .HasConstraintName("FK__Reserva__Cliente__52593CB8");

                    b.Navigation("Carro");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Adapters.Models.Carro", b =>
                {
                    b.Navigation("Locacaos");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Adapters.Models.Categorium", b =>
                {
                    b.Navigation("Carros");
                });

            modelBuilder.Entity("Adapters.Models.Cliente", b =>
                {
                    b.Navigation("Locacaos");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Adapters.Models.Funcionario", b =>
                {
                    b.Navigation("Locacaos");
                });

            modelBuilder.Entity("Adapters.Models.Locacao", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("Adapters.Models.Reserva", b =>
                {
                    b.Navigation("Locacaos");
                });
#pragma warning restore 612, 618
        }
    }
}
